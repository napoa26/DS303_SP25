---
title: "Practice: Simple Linear Regression"
author: 
  - "Alii Napoleon"
  - "DS303, SP25"
  - "Prof. Amber Camp"
date: 1/17/25
format: html
editor: visual
theme: spacelab
---

## Introduction to Simple Linear Regression

This is an introduction to **simple linear regression**, a method used to model the relationship between two variables by fitting a straight line to the data. The goal is to see how one variable (the independent variable) affects another (the dependent variable).

For example, you might predict a student’s test score (dependent variable) based on study hours (independent variable). Simple linear regression helps find a trend or regression line that best fits the data, allowing you to make predictions for varying study hours.

Simple linear regression is useful for studying **cause-and-effect** or **making predictions**, especially when the relationship between the variables is linear. It works best with **continuous data**.

## *y* = *mx* + *b* ?

We talked a lot in class the other day about the basic regression equation. I presented it as:

*y* = *b~0~* + *b~1~x*

Many of you quickly noticed the similarity between *y* = *b~0~* + *b~1~x* and *y* = *mx* + *b.* And you're right–they are both basically the same formula for a straight line. Is there any actual difference at all?

Yes! Despite, again, basically being the same thing, the difference in notation depends on context (when we use the two and how we discuss them). See what you can find online about this, and feel free to discuss with those around you.

### Question 1

What is the difference between *y* = *b~0~* + *b~1~x* and *y* = *mx* + *b*, and when might we use one over the other? Please use your own words

#### Answer

As we discussed in class, they are substantially the same and perform the same function. The most obvious difference is in notation. The former is in notation associated with statistics, while the latter more with algebra, trigonometry, and algebra.

### Question 2

Think back to our class discussion and your previous studies in math. Tell me below what each part of the equation *y* = *b~0~* + *b~1~x* means. Do this from memory if you can!

#### Answer:

-   **y: is the dependent variable**

-   ***b***~**0: the y-intercept, or the intercept**~

-   ***b***~**1: the slope of the regression line**~

-   **x:** the independent variable99 philly rea

## Let's try it

Let's start by loading the `MASS` and `ISLR2` packages, which are very large collections of data sets and functions. You may need to install `ISLR2` and `lme4`.

```{r, echo = FALSE, message = FALSE}
# install.packages("ISLR2")
# install.packages("lme4")

library(MASS)
library(ISLR2)
library(lme4)
```

## Boston Housing Data

The `ISLR2` library contains the `Boston` data set, which records `medv` (median house value) for 506 census tracts in Boston. We will seek to predict `medv` using 12 predictors such as `rmvar` (average number of rooms per house), `age` (proportion of owner-occupied units built prior to 1940) and `lstat` (percent of households with low socioeconomic status).

### Question 3

You can just call upon the data (it's already in the package). I'll get you started, but show me below how you'd explore the data even further by adding code in the below code chunk.

```{r}
head(Boston)
str(Boston)
summary(Boston)

# My Exploration

names(Boston)

# Check for Missing Values

colSums(is.na(Boston))

# GCorrelation Check

cor(Boston)

# Preliminary Visualization

pairs(Boston[, c("medv", "rm", "lstat", "age")])

# Preliminary Target Variable Check

hist(Boston$medv, main = "Distribution of Median Home Values", xlab = "medv", col = "lightblue")


# Exploratory Boxplot

boxplot(Boston$medv, main = "Boxplot of Median Home Values", horizontal = TRUE)

```

We learned in class that we can apply a simple linear regression using `lm`. Here is the basic format:

```{r}
#model <- lm(y ~ x, data=df)
```

### Question 4

Use the above basic format to create a linear regression model to predict the **median home value** (medv) based on the **percentage of lower status population** (lstat), using the data from the 'Boston' dataset. Assign it to the variable `lm.model`.

```{r}
lm.model <- lm(medv ~ lstat, data = Boston)

```

If you set it up right, you should be able to run your model name in the below code chunk and view the basic model output. Give it a try:

```{r}
lm.model
```

### Question 5

What is your model output telling you?

#### Answer:  The model tells us that there is a significantly negative relation, between lstat and medv. This means that as the percentage of lower income households increase, median home value decreases.

You can also try \`summary(lm.model)\`.

```{r}
lm.model <- lm(medv ~ lstat, data = Boston)

summary(lm.model)
```

### Question 6

What additional information do you get from this summary of the model output?

#### Answer:  The summary shows that lstat is a statistically significant predictor of medv, with a strong negative relationship, and that approximately 54% of the variation in home values is explained by the model.

## confint() and predict()

In order to obtain a confidence interval for the coefficient estimates, we can use the `confint()` command. The `predict()` function can be used to produce confidence intervals and prediction intervals for the prediction of `medv` for a given value of `lstat`. Run these and see if you can figure out what it is telling you.

```{r}
confint(lm.model)

predict(lm.model, data.frame(lstat = (c(5, 10, 15))), interval = "confidence")

predict(lm.model, data.frame(lstat = (c(5, 10, 15))), interval = "prediction")
```

### Question 7

What do you think the above `confint()` and `predict()` information means? It's okay to guess.

#### Answer:  'confint()' shows the likely range of the true slope and intercept. 'predict()' estimates home values for 'lstat()'.

## Visualizing

Here is a simple base R way to plot this data:

```{r}
plot(Boston$lstat, Boston$medv)
abline(lm.model)
```

### Question 8

Can you convert the above code chunk to `ggplot`? Try below. Have fun with editing the appearance of your plot if you'd like :)

```{r}
library(ggplot2)

ggplot(Boston, aes(x = lstat, y = medv)) +
  geom_point(color = "steelblue", size = 2) +
  geom_smooth(method = "lm", se = FALSE, color = "firebrick", linetype = "dashed") +
  labs(title = "Relationship between lstat and medv",
       x = "Percentage of Lower Status Population (lstat)",
       y = "Median House Value (medv)") +
  theme_minimal()


ggplot(Boston, aes(x = lstat, y = medv)) +
  geom_point(color = "#2C3E50", size = 3, alpha = 0.7) +
  geom_smooth(method = "lm", se = TRUE, color = "#E74C3C", fill = "#FAD7A0") +
  labs(title = "Relationship between lstat and medv",
       subtitle = "Boston Housing Data",
       x = "Percentage of Lower Status Population (lstat)",
       y = "Median Home Value (medv, in $1000's)") +
  theme_classic() +
  theme(plot.title = element_text(face = "bold", size = 16),
        plot.subtitle = element_text(size = 12))


```

In a future class, we'll explore some diagnostic plots and what that means for evaluating models. For now, just run the below and have a look:

```{r}
par(mfrow = c(2, 2))
plot(lm.model)
```

## Run another model

Now it's your turn to apply a linear regression to other variables from the Boston dataset.

First, view the dataset. Where can you find information about these variables?

```{r}
View(Boston)

help(Boston)
```

### Question 9

What variables are you interested in exploring using a linear regression? Just pick and `x` and a `y` and describe your research question below in plain English:

#### Answer:  I'd like to compare the medv and chas, to analyze the difference between the median values of tracts that bound the Charles River with those that do not.

### Question 10

#### Part 1

Build and run your model, examine the model output:

```{r}
lm.model2 <- lm(lstat ~ chas, data = Boston)

lm.model2
```

```{r}
summary(lm.model2)
```

```{r}
library(ggplot2)

ggplot(Boston, aes(x = factor(chas), y = medv)) +
  geom_boxplot(fill = "lightblue", color = "darkblue", alpha = 0.7) +
  geom_jitter(width = 0.15, color = "darkred", alpha = 0.5) +
  labs(title = "Median Home Value by Proximity to the Charles River",
       x = "Tract Bounded by Charles River (chas)",
       y = "Median Home Value (medv)") +
  scale_x_discrete(labels = c("0" = "No", "1" = "Yes")) +
  theme_minimal()

```

#### Part 2

Explain what you found in plain English. Do your best.

#### Answer:  Most obvious, is that there are far fewer homes that bound the Charles River (Yes), than those that do not (No). Also, though the lowest median value is quite higher for 'Yes', the margin between the median value of the means is quite small.

## The end!

That's it for now. Please feel free to raise questions in class or via email!
